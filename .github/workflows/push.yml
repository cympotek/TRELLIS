name: Push to Replicate

on:
  workflow_dispatch:
    inputs:
      model_name:
        description: 'Enter the model name, like "alice/bunny-detector". If unset, will use the value of `image` in cog.yaml.'

jobs:
  push_to_replicate:
    name: Push to Replicate
    runs-on: ubuntu-latest
    environment: replicate

    steps:
      - name: Free disk space
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          tool-cache: false
          docker-images: false

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Cog
        uses: replicate/setup-cog@v2
        with:
          token: ${{ secrets.REPLICATE_API_TOKEN }}

      - name: Push to Replicate
        id: push_model
        run: |
          if [ -n "${{ inputs.model_name }}" ]; then
            PUSH_OUTPUT=$(cog push r8.im/${{ inputs.model_name }})
            MODEL_NAME="${{ inputs.model_name }}"
          else
            PUSH_OUTPUT=$(cog push)
            MODEL_NAME=$(echo "$PUSH_OUTPUT" | grep -oE 'r8\.im/.+/.+' | head -n1 | cut -d '/' -f2-)
          fi

          echo "$PUSH_OUTPUT"

          # Extract Version ID from output like: https://replicate.com/owner/model/versions/xxxxxxxxxxxx
          VERSION_ID=$(echo "$PUSH_OUTPUT" | grep -oE 'replicate\.com/.+?/[^ ]+/versions/[a-z0-9\-]+' | head -n1 | awk -F '/' '{print $6}')

          echo "VERSION_ID=$VERSION_ID" >> $GITHUB_ENV
          echo "MODEL_NAME=$MODEL_NAME" >> $GITHUB_ENV

      - name: Enable model version
        if: env.VERSION_ID != ''
        run: |
          echo "Enabling version ${VERSION_ID} for model ${MODEL_NAME}..."
          curl -X POST \
            -H "Authorization: Token ${{ secrets.REPLICATE_API_TOKEN }}" \
            https://api.replicate.com/v1/models/${{ env.MODEL_NAME }}/versions/${{ env.VERSION_ID }}/enable